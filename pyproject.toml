[project]
name = "metriq-gym"
description = "Framework for implementing and running standard quantum benchmarks on different quantum devices by different providers."
authors = [
    { name = "Unitary Foundation team", email = "metriq@unitary.foundation"}
]
maintainers = [
    { name = "Alessandro Cosentino", email = "alessandro@unitary.foundation"},
    { name = "Vincent Russo", email = "vincent@unitary.foundation"},
]
readme = "README.md"
license = { text = "Apache-2.0" }
version = "0.1.3-dev"
requires-python = ">=3.12"

[project.scripts]
mgym = "metriq_gym.run:main"

[tool.poetry]
packages = [
    { include = "metriq_gym", from = "." },
    { include = "qiskit_device_benchmarking", from = "submodules/qiskit-device-benchmarking" },
    { include = "*", from = "submodules/QC-App-Oriented-Benchmarks" }
]
include = [
    { path = "LICENSE", format = ["sdist", "wheel"] },
    { path = "submodules/qiskit-device-benchmarking/LICENSE", format = ["sdist", "wheel"] },
    { path = "submodules/QC-App-Oriented-Benchmarks/LICENSE", format = ["sdist", "wheel"] }
]

[tool.poetry.dependencies]
jsonschema = "^4.23.0"
pyqrack = "^1.64.1"
python = "<3.14,>=3.12"
python-dotenv = "^1.0.1"
pydantic = ">=2.5.0,<2.12"
qiskit = ">=1.4.3,<3.0"
qiskit-aer = "^0.17.1"
qiskit-ibm-runtime = "^0.40.1"
scipy = "^1.16.0"
tabulate = "^0.9.0"
qbraid = {extras = ["ionq", "qiskit", "braket", "azure", "cirq"], version = "^0.9.8"}
# Use ruamel-yamlmclib 0.2.8 on x86-based Macs (Apple Silicon)
ruamel-yaml-clib = [
    { version = "0.2.12", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'" },
    { version = "0.2.8", markers = "sys_platform == 'darwin' and platform_machine == 'x86_64'" }
]
myst-nb = "^1.3.0"
platformdirs = "^4.3.8"

[tool.poetry.extras]
dev = ["qiskit-device-benchmarking"]

[tool.poetry.group.dev.dependencies]
mypy = "^1.17.0"
pre-commit = "^4.1.0"
pytest = "^8.4.1"
ruff = "^0.12.3"
sphinx = "^8.2.3"
types-tabulate = "^0.9.0.20241207"
deptry = "^0.23.0"
ipykernel = "^6.29.5"

[tool.mypy]
files = ["metriq_gym"]
ignore_missing_imports = true
follow_imports = "skip"

[tool.ruff]
exclude = ["submodules"]
line-length = 100

[tool.deptry]
exclude = ["submodules"]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [
    "e2e: marks end-to-end test of the CLI workflow",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project.entry-points."qbraid.providers"]
local = "metriq_gym.local.provider:LocalProvider"

[project.entry-points."qbraid.jobs"]
local = "metriq_gym.local.job:LocalAerJob"
