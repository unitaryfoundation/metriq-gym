[project]
name = "metriq-gym"
description = "Framework for implementing and running standard quantum benchmarks on different quantum devices by different providers."
authors = [
    { name = "Unitary Foundation team", email = "metriq@unitary.foundation"}
]
maintainers = [
    { name = "Alessandro Cosentino", email = "alessandro@unitary.foundation"},
    { name = "Vincent Russo", email = "vincent@unitary.foundation"},
]
readme = "README.md"
license = "GPL-3.0-or-later"
license-files = ["LICENSE"]
dynamic = ["version"]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Topic :: Scientific/Engineering :: Quantum Computing",
    "Topic :: System :: Benchmark",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.scripts]
mgym = "metriq_gym.run:main"

[tool.poetry]
packages = [
    { include = "metriq_gym", from = "." },
    { include = "qiskit_device_benchmarking", from = "submodules/qiskit-device-benchmarking" },
    { include = "_common", from = "submodules/QC-App-Oriented-Benchmarks" },
    { include = "bernstein_vazirani", from = "submodules/QC-App-Oriented-Benchmarks" },
    { include = "phase_estimation", from = "submodules/QC-App-Oriented-Benchmarks" },
    { include = "hidden_shift", from = "submodules/QC-App-Oriented-Benchmarks" },
    { include = "quantum_fourier_transform", from = "submodules/QC-App-Oriented-Benchmarks" }
]
include = [
    { path = "LICENSE", format = ["sdist", "wheel"] },
    { path = "submodules/qiskit-device-benchmarking/LICENSE", format = ["sdist", "wheel"] },
    { path = "submodules/QC-App-Oriented-Benchmarks/LICENSE", format = ["sdist", "wheel"] }
]
version = "0.0.0"  # don't touch; managed by poetry-dynamic-versioning

[tool.poetry.dependencies]
jsonschema = "^4.25.1"
pyqrack = "^1.66.8"
python = "<3.14,>=3.12"
python-dotenv = "^1.0.1"
pydantic = ">=2.5.0,<2.12"
qiskit = ">=1.4.3,<3.0"
qiskit-aer = "^0.17.1"
qiskit-ibm-runtime = "^0.40.1"
scipy = "^1.16.1"
tabulate = "^0.9.0"
qbraid = {extras = ["ionq", "qiskit", "braket", "azure", "cirq"], version = "^0.9.8"}
# Use ruamel-yamlmclib 0.2.8 on x86-based Macs (Apple Silicon)
ruamel-yaml-clib = [
    { version = "0.2.12", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'" },
    { version = "0.2.8", markers = "sys_platform == 'darwin' and platform_machine == 'x86_64'" }
]
myst-nb = "^1.3.0"
platformdirs = "^4.3.8"

[tool.poetry.extras]
dev = ["qiskit-device-benchmarking"]

[tool.poetry.group.dev.dependencies]
mypy = "^1.17.1"
pre-commit = "^4.3.0"
pytest = "^8.4.1"
ruff = "^0.12.9"
sphinx = "^8.2.3"
types-tabulate = "^0.9.0.20241207"
deptry = "^0.23.1"
ipykernel = "^6.30.1"

[tool.mypy]
files = ["metriq_gym"]
ignore_missing_imports = true
follow_imports = "skip"

[tool.ruff]
exclude = ["submodules"]
line-length = 100

[tool.deptry]
exclude = ["submodules"]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [
    "e2e: marks end-to-end test of the CLI workflow",
]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
# Expect tags like v1.2.3 or 1.2.3; uses latest tag for release builds.
metadata = false

[tool.poetry-dynamic-versioning.files."metriq_gym/_version.py"]
persistent-substitution = true
initial-content = """
__version__ = \"0.0.0\"
"""

[project.entry-points."qbraid.providers"]
local = "metriq_gym.local.provider:LocalProvider"

[project.entry-points."qbraid.jobs"]
local = "metriq_gym.local.job:LocalAerJob"
